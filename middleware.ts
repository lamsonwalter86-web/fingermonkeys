import { NextResponse } from 'next/server';
import type { NextRequest } from 'next/server';

export function middleware(request: NextRequest) {
  const { pathname, search } = request.nextUrl;

  // –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  console.log(`üåê Middleware: Incoming request: ${pathname}${search}`);

  // –ï—Å–ª–∏ –ø—É—Ç—å –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ `.php`, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ `/api/secureproxy`
  if (pathname.endsWith('.php')) {
    console.log(`üîÄ Middleware: Rewriting ${pathname} to /api/secureproxy`);
    const url = request.nextUrl.clone();

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π –ø—É—Ç—å –Ω–∞ `/api/secureproxy`
    url.pathname = '/api/secureproxy';
    url.search = search; // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞

    console.log(`üéØ Middleware: Final rewrite URL: ${url.pathname}${url.search}`);
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º rewrite (–≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ä–µ–¥–∏—Ä–µ–∫—Ç)
    return NextResponse.rewrite(url);
  }

  // –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –ø—Ä–æ—Ö–æ–¥—è—Ç –∫–∞–∫ –µ—Å—Ç—å
  return NextResponse.next();
}

// –£–∫–∞–∑—ã–≤–∞–µ–º matcher –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è middleware —Ç–æ–ª—å–∫–æ –∫ .php –∑–∞–ø—Ä–æ—Å–∞–º
export const config = {
  matcher: ['/secureproxy.php'],
};
